syntax = "proto3";

package scheduler;

option go_package = "microsomes.com/scheduler";

service SchedulerService {

    rpc runTask(RunTaskRequest) returns (RunTaskResponse);
    rpc createTask(TaskDefintion) returns (CreateTaskResponse);
    rpc getTasks(voidNo) returns (GetTasksResponse);
    rpc getTask(idNo) returns (TaskDefintion);
    // rpc deleteTask(idNo) returns (voidNo);
    // rpc deleteDefinition(voidNo) returns (voidNo);
    // rpc killTask(voidNo) returns (voidNo);
    // rpc getTaskLog(voidNo) returns (voidNo);

}

message voidNo {}

message idNo {
    int32 Id = 1;
}

message TaskDefintion {
     string Name = 1;
     string Runner = 2;
     string DockerImageUrl = 3;
     int32  Timeout = 4;
     string DockerRegistryHost = 5;
     string DockerRegistryProvider = 6;
     string DockerAWSAccessCode = 7;
     string DockerAWSSecretCode = 8;

}

message GetTasksResponse {
    repeated TaskDefintion tasks =1;
}

message GetDefintionResponse {
    repeated TaskDefintion tasks = 1;
}

message CreateTaskResponse {
    int32 createId = 1;
    int32 createdStatus = 5;
    bool created = 2;
    bool error = 3;
}

message RunTaskRequest {
    int32 taskId =  1;
}

message RunTaskResponse {
    int32 statusCode = 1;
}